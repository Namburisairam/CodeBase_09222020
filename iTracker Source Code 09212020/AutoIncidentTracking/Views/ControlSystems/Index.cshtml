@model PaginatedList<IncidentTracking.Models.ControlSystemIndexViewModel>
@*
    * ================================================================================
    * MODULE:  ControlSystems\Index.cshtml
    *
    * PURPOSE:
    * This view supports control systems listing.
    *
    * Copyright:    ©2018 by E2i, Inc.
    * Created Date: 2018-11-01
    * Author:       Brad Robbins (brobbins@e2i.net)
    *
    * --------------------------------------------------------------------------------
    * Revision History:
    * Author           Date        Description
    * Brad Robbins	   2018-11-01  Initial version
    * ================================================================================
*@
@{
    ViewData["Title"] = "Index";
}

<h2>Control Systems</h2>
<p class="alert-success">@TempData["Message"]</p>
<p class="alert-danger">@TempData["Error"]</p>

<p>
    <a asp-action="Create" class="btn btn-default">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Filter by: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table table-striped table-condensed">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["ManufacturingAreaNameSortParam"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Manufacturing Area
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["NameSortParam"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Control System
                </a>
            </th>
            <th>Description</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ManufacturingAreaName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ControlSystemId">Details</a> |
                    <a asp-action="Edit" asp-route-id="@item.ControlSystemId">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.ControlSystemId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@await Html.PartialAsync("PagingPartialView")