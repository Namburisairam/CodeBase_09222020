#pragma checksum "H:\AutoIncidentTracking\Views\Incidents\AddEditIncidentScripts.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "03c26b543ae9e98dbd47d3745efdefd0f70b13da"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Incidents_AddEditIncidentScripts), @"mvc.1.0.view", @"/Views/Incidents/AddEditIncidentScripts.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Incidents/AddEditIncidentScripts.cshtml", typeof(AspNetCore.Views_Incidents_AddEditIncidentScripts))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "H:\AutoIncidentTracking\Views\_ViewImports.cshtml"
using IncidentTracking;

#line default
#line hidden
#line 2 "H:\AutoIncidentTracking\Views\_ViewImports.cshtml"
using IncidentTracking.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"03c26b543ae9e98dbd47d3745efdefd0f70b13da", @"/Views/Incidents/AddEditIncidentScripts.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f795bc73ab22dff54ea51d3e61462dd07486b2b6", @"/Views/_ViewImports.cshtml")]
    public class Views_Incidents_AddEditIncidentScripts : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1, true);
            WriteLiteral(" ");
            EndContext();
            BeginContext(654, 942, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    $().ready(function () {
        if ($('#RequireES11').is(':checked')) {
            $(""#ES11"").show();
        } else {
            $(""#ES11"").hide();
        }
    });

    $('#RequireES11').change(function () {
        if ($('#RequireES11').is(':checked')) {
            $(""#ES11"").show();
        } else {
            $(""#ES11"").hide();
        }
    });

    //update lists as Manufacturing Area changes
    $('#ManufacturingAreaId').change(function () {
        var selectedManufacturingArea = $('#ManufacturingAreaId').val();
        var controlSystemSelect = $('#ControlSystemId');

        //blank the cascaded lists
        controlSystemSelect.empty();

        if (selectedManufacturingArea != null && selectedManufacturingArea != '') {

            //update the control system list based on the manufacturing area selection
            $.getJSON(
                '");
            EndContext();
            BeginContext(1597, 36, false);
#line 47 "H:\AutoIncidentTracking\Views\Incidents\AddEditIncidentScripts.cshtml"
            Write(Url.Action("GetControlSystemsAsync"));

#line default
#line hidden
            EndContext();
            BeginContext(1633, 1153, true);
            WriteLiteral(@"', //controller action
                { manufacturingAreaId: selectedManufacturingArea }, //data

                //callback to reload the software list
                function (controlSystems) {
                    if (controlSystems != null && !jQuery.isEmptyObject(controlSystems)) {
                        //add help text
                        controlSystemSelect.append($('<option/>', {
                            value: null,
                            text: ""Select Control System""
                        }));
                        $.each(controlSystems, function (index, cs) {
                            controlSystemSelect.append($('<option/>', {
                                value: cs.controlSystemId,
                                text: cs.name
                            }));
                        });
                    };
                });
        }
    });

    //when the form is submitted, update the local time
    $('#submitButton').click(function () {
      ");
            WriteLiteral("  var dt = new Date();\r\n        $(\'#LocalTimeString\').val(dt.toISOString());\r\n        $(\'form\').submit();\r\n    });\r\n\r\n</script>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
